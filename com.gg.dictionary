package com.gg.dictionary;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

public class Dictionary {
	
	
	public static Object[] upload(String fileName)
	{
		Object[] dict = new Object[26];
		File file = new File(fileName);
		if(!file.exists())
		{
			return dict;
		}
		BufferedReader br = null;
		FileReader fr = null;
		try
		{
			fr = new FileReader(file);
			br = new BufferedReader(fr);
			String line = "";
			while ((line = br.readLine()) != null) 
			{
				int space = line.indexOf(' ');
			    String word = line.substring(0,space);
			    String meaning = line.substring(space+1);
			    word = word.toLowerCase();
			    int c = word.charAt(0)-97;
			    int len = word.length();
			    Object o = dict[c];
			    if(o==null)
			    {
			    	Map<Integer, Map<String, String>> map = new HashMap<Integer, Map<String,String>>();
			    	Map<String, String> tm = new TreeMap<String, String>();
			    	tm.put(word, meaning);
			    	map.put(Integer.valueOf(len), tm);
			    	dict[c] = map;
			    }
			    else
			    {
			    	Map<Integer, Map<String, String>> map = (Map<Integer, Map<String, String>>) o;
			    	Map<String, String> tm = (TreeMap<String, String>)map.get(len);
			    	if(tm==null)
			    	{
			    		tm = new TreeMap<String, String>();
			    	}
			    	tm.put(word, meaning);
			    	map.put(Integer.valueOf(len), tm);
			    }
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		finally
		{
			try
			{
				br.close();
			}
			catch(Exception e) { }
			try
			{
				fr.close();
			}
			catch(Exception e) { }
			br = null;
			file = null;
			fr = null;
		}
		return dict;
	}

	public static void main(String[] arg) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Enter file name with path (eg: d:/ganesh/test.txt) : ");
		String fileName = br.readLine();
		Object[] dict = upload(fileName);
		
		/*for(Object o : dict)
		{
			if(o==null)
			{
				continue;
			}
			Map<Integer, Map<String, String>> map = (Map<Integer, Map<String, String>>) o;
			for(Integer k : map.keySet())
			{
				System.out.println("Key : "+k);
				Map<String, String> tm = (TreeMap<String, String>)map.get(k);
				for(String key : tm.keySet())
				{
					System.out.println("Treemap key : "+key+", val : "+tm.get(key));
				}
			}
		}*/
		
		while(true)
		{
			System.out.println("(CTRL+C to break)Enter word to search : ");
			String word = br.readLine();
			String lower = word.toLowerCase();
			int c = lower.charAt(0)-97;
		    int len = word.length();
		    if(c>26 || dict[c] == null)
		    {
		    	System.out.println("Word not in dictionary");
		    	continue;
		    }
		    Map<Integer, Map<String, String>> map = (Map<Integer, Map<String, String>>) dict[c];
		    Map<String, String> tm = (TreeMap<String, String>)map.get(len);
		    if(tm==null)
		    {
		    	System.out.println("Word not in dictionary");
		    	continue;
		    }
		    String meaning = tm.get(word);
		    System.out.println("Meaning : "+meaning);
			
		}
	}
}
